pipeline {
    agent any
    
     environment {
        IMAGE_NAME = 'machine-rs'
        CONTAINER_NAME = 'machine-rs-container'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/ss5924/machine-rs.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    docker.image('jdk21-maven:latest').inside {
                        sh 'mvn clean install'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    docker.image('jdk21-maven:latest').inside {
                        sh 'mvn test'
                    }
                }
            }
        }

        stage('Package') {
            steps {
                script {
                    docker.image('jdk21-maven:latest').inside {
                        sh 'mvn package'
                    }
                }
            }
        }
        
        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def image = docker.build("${IMAGE_NAME}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Deploy to Local Server') {
            steps {
                script {
                    sh """
                    docker stop ${CONTAINER_NAME} || true
                    docker rm ${CONTAINER_NAME} || true
                    docker run -d --name ${CONTAINER_NAME} -p 8080:8080 ${IMAGE_NAME}:${env.BUILD_NUMBER}
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }

        success {
            echo 'Build completed successfully!'
        }

        failure {
            echo 'Build failed. Check the logs for details.'
        }
    }
}